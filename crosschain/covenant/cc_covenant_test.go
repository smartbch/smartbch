package covenant

import (
	"encoding/hex"
	"fmt"
	"testing"

	"github.com/stretchr/testify/require"

	gethcmn "github.com/ethereum/go-ethereum/common"

	"github.com/gcash/bchd/chaincfg"
	"github.com/gcash/bchd/txscript"
)

var (
	redeemScriptWithoutConstructorArgs = HexToBytes("5279009c635a795c797e5d797e5e797e5f797e60797e0111797e0112797e0113797e0114797ea952798800717c567a577a587a597a5a7a575c7a5d7a5e7a5f7a607a01117a01127a01137a01147a01157a5aafc3519dc4519d00cc00c602d007949d5379879154797b87919b63011453797e01147e52797ec1012a7f777e02a91478a97e01877e00cd78886d686d7551677b519d547956797e57797ea98800727c52557a567a577a53afc0009d00cc00c69d024065b27501147b7ec101157f777e02a9147ca97e01877e00cd877768")

	operatorWIFs = []string{
		"L482yD31EhZopxRD3V19QEANQaYkcUZfgNKYY2TV4RTCXa6izAKo",
		"L4JzvBMUmkQCTdz2zbVgTyW8dDMvMU8HFwe413qfnBxW3vKSw6sm",
		"L3vi8Z3HJUQw3iXcgRkbcPVku6R1XA2V6iLCG6NeuqRTvt4mUV6K",
		"L5mXQBYy1nKMTxXA3LmvUVH9pfBeaKzCKiYNszkj88s2vQEocyUs",
		"L15emxZt9yyY6ZxxRGvKRm72CMZaCRDKbSRmdRwu5h2wCUGdfwwb",
		"L5X85r9Bbf86jyf4wSRXxttPwWmkcGcv2tHhZ9eD6YiNZnZcPqZX",
		"L3HPpfMVSmYN9Y3tVJT2UorzNyWjZEQMHHuJmZKnwAGpudpA1o93",
		"L44W5cEBFAY4kcSm5q7ch8Ko3AsXV1MfJDDq1oq1u797EkhutH8s",
		"KxnPxfZ3VJtdfJm7dk1g4PeHJWz9BqRJwk6wfdNMTqeUiJJRphzD",
		"KzPnubj5tnS8efj2nApUK3wnsHCKAS6khHYxPCaciT474mNs6vfJ",
	}

	operatorPks = [][]byte{
		HexToBytes("02d86b49e3424e557beebf67bd06842cdb88e314c44887f3f265b7f81107dd6994"),
		HexToBytes("035c0a0cb8987290ea0a7a926e8aa8978ac042b4c0be8553eb4422461ce1a17cd8"),
		HexToBytes("03fdec69ef6ec640264045229ca7cf0f170927b87fc8d2047844f8a766ead467e4"),
		HexToBytes("038fd3d33474e1bd453614f85d8fb1edecae92255867d18a9048669119fb710af5"),
		HexToBytes("0394ec324d59305638ead14b4f4da9a50c793f1e328e180f92c04a4990bb573af1"),
		HexToBytes("0271ea0c254ebbb7ed78668ba8653abe222b9f7177642d3a75709d95912a8d9d2c"),
		HexToBytes("02fbbc3870035c2ee30cfa3102aff15e58bdfc0d0f95998cd7e1eeebc09cdb6873"),
		HexToBytes("0386f450b1bee3b220c6a9a25515f15f05bd80a23e5f707873dfbac52db933b27d"),
		HexToBytes("03bfe6f6ecb5e10662481aeb6f6408db2a32b9b86a660acbb8c5374dbb976e53ca"),
		HexToBytes("03883b732620e238e74041e5fab900234dc80f7a48d56a1bf41e8523c4661f8243"),
	}

	monitorWIFs = []string{
		"L4GUc8432jgYMVxa1UhF1UC9Mxer5N7exdhbVLugZgWsR29U2pcw",
		"Kxr5EpWHx2WB5TKXRqqZVPNnEqB7zisXaRS6QgVTMGogzua9JFjP",
		"L2M9cNJ7oQeHMnBVFyDZPhGAGNB3v6swcX1xRiYUPj7Fpcjnv3UV",
	}

	monitorPks = [][]byte{
		HexToBytes("024a899d685daf6b1999a5c8f2fd3c9ed640d58e92fd0e00cf87cacee8ff1504b8"),
		HexToBytes("0374ac9ab3415253dbb7e29f46a69a3e51b5d2d66f125b0c9f2dc990b1d2e87e17"),
		HexToBytes("024cc911ba9d2c7806a217774618b7ba4848ccd33fe664414fc3144d144cdebf7b"),
	}
)

var (
	operatorPks2 = [][]byte{
		HexToBytes("03b027f1a8faa455ba42b2e8d898c28530835b33985e0ec45fdb6a4a9ce2eba06e"),
		HexToBytes("02036a24560d3892a68a2a839952e41eea9499223e45032a1f1f0eb06cb33b5b0b"),
		HexToBytes("02d452825042d8b86d038c39143521dbecd6d3c4d102d69bf16e6f2feb28526866"),
		HexToBytes("037e38fc889954f0916a53f33badb8bc9f02d64eac516d0822fc440fa3d52041aa"),
		HexToBytes("02f03ad456b4f6b71037fe668f704e4d0ea4c29b72a913a8a3cc0601e937ca73a7"),
		HexToBytes("02adf4bd0fa7413b0e79e5e49c0a239de768a400b58d25d856178fd1c640c26302"),
		HexToBytes("021a4c0ac1a3198172f0855d6d8cd278cd6a111816dbcc8de5331b60142ee1babf"),
		HexToBytes("037ab9aebb2ebfc2aef39f67952ce63a3f264eea76f22e986e573d338eca27a8cc"),
		HexToBytes("024841324c9007d6dd3f641862aa2fbc981db444797369e32bc16ae8df0166d5c1"),
		HexToBytes("02516d07ed1eadf9a19ac5b723c7030d913c01475e923c7d08c805312491debab3"),
	}
)

func Test_GetP2SHAddr(t *testing.T) {
	c, err := NewCcCovenant(redeemScriptWithoutConstructorArgs, operatorPks, monitorPks, 2000, &chaincfg.TestNet3Params)
	require.NoError(t, err)
	addr, err := c.GetP2SHAddress()
	require.NoError(t, err)
	require.Equal(t, "bchtest:pplmykcc2lale6j6fg4ejsdtlhut6sc08q7uv8pxhm", addr)
}

func Test_BuildRedeemByUserUnlockingScript(t *testing.T) {
	c, err := NewCcCovenant(redeemScriptWithoutConstructorArgs, operatorPks, monitorPks, 2000, &chaincfg.TestNet3Params)
	require.NoError(t, err)

	sigScript, err := c.BuildRedeemByUserUnlockingScript([][]byte{
		HexToBytes("0x304402203b289d27eed12a2abb874c41a36bee14c5a4340f34e1306c21b32fad2040613b022061db8baa44af6adffc0f420bd7ff40b23501fb0d3a32e86e718730e2729d965841"),
		HexToBytes("0x30440220081a832b6f0beef5a2311bc24eb818bb34e598d88fa9cc217b41e4d88cc517de02203f158e5746f481a4676c3cbe7edd6a2e648a2294552458d64fea0dda27ad72ed41"),
		HexToBytes("0x3045022100a2e36c1b73bfe1baa2eb4a44c5ee675eaee67e85a26eecf5d54cbddf655ba3e802207fb19769f4e9ba97093af84a1bc96465c76c9a4d10b23d76d84049d6e9517c9141"),
		HexToBytes("0x30440220541a6035542abd33b318584b01a62ea4678e4d407e28ec5c4a1d98be8da20a7802203e05ae652cb0a8f615fca5a0531df7111da80a7985598f446761ccf7ccbea8b241"),
		HexToBytes("0x304402205b5d26db1d7cd4b9ddebef0c3a74124d5b8ce549946d2ddcd6ba9121d8adb886022038d0572915960a1e1ca4e921c4bf6432e336f83e2c2a5f7e48697783d8ef92fd41"),
		HexToBytes("0x30440220148300596475fd0b80c2e9704caa4a77485ab50e6666b80dec73d067ed38a30402205385a562dde1c06e15d33280b32908ce2ca42f6ef9760feb646679fafe1aeaae41"),
		HexToBytes("0x304402207bd5dd3fce07a56d28a1e456c538901fbc9820f52855f5502ecb7c5a35b05d41022027611a420ba0617764672d11bf908c7f31b6f05f66ca2268fa3135f68951521441"),
	})
	require.NoError(t, err)
	require.Equal(t, HexToBytes("0x14553fac4027a7a3c4e8a3eaea75aab173d3c8144b1427c4ca4766591e6bb8cd71b83143946c53eaf9a32103883b732620e238e74041e5fab900234dc80f7a48d56a1bf41e8523c4661f82432103bfe6f6ecb5e10662481aeb6f6408db2a32b9b86a660acbb8c5374dbb976e53ca210386f450b1bee3b220c6a9a25515f15f05bd80a23e5f707873dfbac52db933b27d2102fbbc3870035c2ee30cfa3102aff15e58bdfc0d0f95998cd7e1eeebc09cdb6873210271ea0c254ebbb7ed78668ba8653abe222b9f7177642d3a75709d95912a8d9d2c210394ec324d59305638ead14b4f4da9a50c793f1e328e180f92c04a4990bb573af121038fd3d33474e1bd453614f85d8fb1edecae92255867d18a9048669119fb710af52103fdec69ef6ec640264045229ca7cf0f170927b87fc8d2047844f8a766ead467e421035c0a0cb8987290ea0a7a926e8aa8978ac042b4c0be8553eb4422461ce1a17cd82102d86b49e3424e557beebf67bd06842cdb88e314c44887f3f265b7f81107dd699447304402207bd5dd3fce07a56d28a1e456c538901fbc9820f52855f5502ecb7c5a35b05d41022027611a420ba0617764672d11bf908c7f31b6f05f66ca2268fa3135f689515214414730440220148300596475fd0b80c2e9704caa4a77485ab50e6666b80dec73d067ed38a30402205385a562dde1c06e15d33280b32908ce2ca42f6ef9760feb646679fafe1aeaae4147304402205b5d26db1d7cd4b9ddebef0c3a74124d5b8ce549946d2ddcd6ba9121d8adb886022038d0572915960a1e1ca4e921c4bf6432e336f83e2c2a5f7e48697783d8ef92fd414730440220541a6035542abd33b318584b01a62ea4678e4d407e28ec5c4a1d98be8da20a7802203e05ae652cb0a8f615fca5a0531df7111da80a7985598f446761ccf7ccbea8b241483045022100a2e36c1b73bfe1baa2eb4a44c5ee675eaee67e85a26eecf5d54cbddf655ba3e802207fb19769f4e9ba97093af84a1bc96465c76c9a4d10b23d76d84049d6e9517c91414730440220081a832b6f0beef5a2311bc24eb818bb34e598d88fa9cc217b41e4d88cc517de02203f158e5746f481a4676c3cbe7edd6a2e648a2294552458d64fea0dda27ad72ed4147304402203b289d27eed12a2abb874c41a36bee14c5a4340f34e1306c21b32fad2040613b022061db8baa44af6adffc0f420bd7ff40b23501fb0d3a32e86e718730e2729d965841004cf914553fac4027a7a3c4e8a3eaea75aab173d3c8144b1427c4ca4766591e6bb8cd71b83143946c53eaf9a35279009c635a795c797e5d797e5e797e5f797e60797e0111797e0112797e0113797e0114797ea952798800717c567a577a587a597a5a7a575c7a5d7a5e7a5f7a607a01117a01127a01137a01147a01157a5aafc3519dc4519d00cc00c602d007949d5379879154797b87919b63011453797e01147e52797ec1012a7f777e02a91478a97e01877e00cd78886d686d7551677b519d547956797e57797ea98800727c52557a567a577a53afc0009d00cc00c69d024065b27501147b7ec101157f777e02a9147ca97e01877e00cd877768"),
		sigScript)
}

func Test_RedeemByUserTx(t *testing.T) {
	c, err := NewCcCovenant(redeemScriptWithoutConstructorArgs, operatorPks, monitorPks, 2000, &chaincfg.TestNet3Params)
	require.NoError(t, err)

	txid := HexToBytes("c70ae4cd69afad7ac025c719055e2eefe18e3942259c2882d7afb0c39ae339ef")
	vout := uint32(0)
	inAmt := int64(10000)
	toAddr := "bchtest:qzvu0c953gzu6cpykgkdfy8uacc255wcvgmp7ekj7y"
	//outAmt := int64(8000) // gasFee = 2000

	unsignedTx, sigHash, err := c.GetRedeemByUserTxSigHash(txid, vout, inAmt, toAddr)
	require.NoError(t, err)

	var sigs [][]byte
	hashType := txscript.SigHashAll | txscript.SigHashForkID
	for i := 0; i < 7; i++ {
		sig, err := SignCcCovenantTxSigHashECDSA(operatorWIFs[i], sigHash, hashType)
		require.NoError(t, err, i)
		sigs = append(sigs, sig)
	}

	//pkh := HexToBytes("99c7e0b48a05cd6024b22cd490fcee30aa51d862")
	rawTx, err := c.FinishRedeemByUserTx(unsignedTx, sigs)
	require.NoError(t, err)
	println("rawTx:", rawTx)

	//expectedTxHex := "0200000001ef39e39ac3b0afd782289c2542398ee1ef2e5e0519c725c07aadaf69cde40ac700000000fd730414553fac4027a7a3c4e8a3eaea75aab173d3c8144b1427c4ca4766591e6bb8cd71b83143946c53eaf9a32103883b732620e238e74041e5fab900234dc80f7a48d56a1bf41e8523c4661f82432103bfe6f6ecb5e10662481aeb6f6408db2a32b9b86a660acbb8c5374dbb976e53ca210386f450b1bee3b220c6a9a25515f15f05bd80a23e5f707873dfbac52db933b27d2102fbbc3870035c2ee30cfa3102aff15e58bdfc0d0f95998cd7e1eeebc09cdb6873210271ea0c254ebbb7ed78668ba8653abe222b9f7177642d3a75709d95912a8d9d2c210394ec324d59305638ead14b4f4da9a50c793f1e328e180f92c04a4990bb573af121038fd3d33474e1bd453614f85d8fb1edecae92255867d18a9048669119fb710af52103fdec69ef6ec640264045229ca7cf0f170927b87fc8d2047844f8a766ead467e421035c0a0cb8987290ea0a7a926e8aa8978ac042b4c0be8553eb4422461ce1a17cd82102d86b49e3424e557beebf67bd06842cdb88e314c44887f3f265b7f81107dd6994473044022031427dd1f45b9da87a7debd1b87ed4ecded757229fe4303d53622218f6ad03bc0220620d22921ebc048ce3b059a90fbd6b73bb4317eac8381fda0536122ca6d551e041473044022036b4e61517de41dff076c8ee34086144b3e0dd6643630fc3346b5c3cbe70b188022035eb4b9416cc6f57866223c09d7b7fa689107b9f8e602a50e72b10e854c58f8841473044022061f3679773b8614476ed86fcb9bd6e2e8583fa7d31f40ea8253828e8ec557494022062464d5b18009799ad2da29eb3434e39a337b92da8782110c4eff88cb189cc0a4147304402207dda8c8c17b45d59f9db2dd2c9100e199055efb9d0ae9d8288b89343e40f07320220049f93711440f3430758296e5557db9a1f6f8cdb18ecd86994ed42da932fd00c41483045022100e33a551d632b8d011160adad33cbe9313398f4eda81a4638f5b882e24df3b3ab02201499477ce35e4fe2dbb068308cf74990cbb51fa6ed923cf2f68dac5e010744c74147304402200dbc8ad06836f0a24d60da54fb2afb8db854864e5ca1bb4d982fde792500c6330220720d6f7246c23e5edf4770fbbb0e5c3680e72204be28ce2491ee9442fb62b0724147304402206f858c771e95ca1e4fac2e5580ca5b989a2ac447741154189fb99f044839eee0022049aa497292adadb2ffbdbb10a2d997f1210a0e4aa1acd354551e972db2fed00841004cf914553fac4027a7a3c4e8a3eaea75aab173d3c8144b1427c4ca4766591e6bb8cd71b83143946c53eaf9a35279009c635a795c797e5d797e5e797e5f797e60797e0111797e0112797e0113797e0114797ea952798800717c567a577a587a597a5a7a575c7a5d7a5e7a5f7a607a01117a01127a01137a01147a01157a5aafc3519dc4519d00cc00c602d007949d5379879154797b87919b63011453797e01147e52797ec1012a7f777e02a91478a97e01877e00cd78886d686d7551677b519d547956797e57797ea98800727c52557a567a577a53afc0009d00cc00c69d024065b27501147b7ec101157f777e02a9147ca97e01877e00cd877768ffffffff01401f0000000000001976a91499c7e0b48a05cd6024b22cd490fcee30aa51d86288ac00000000"
	//require.Equal(t, expectedTxHex, rawTx)
}

func Test_GetP2SHAddrNew(t *testing.T) {
	c, err := NewCcCovenant(redeemScriptWithoutConstructorArgs, operatorPks, monitorPks, 2000, &chaincfg.TestNet3Params)
	require.NoError(t, err)
	newAddr, err := c.GetP2SHAddressNew(operatorPks2, monitorPks)
	require.NoError(t, err)
	require.Equal(t, "bchtest:pzhzcadkj36luj9ptudg8z6j8r6vc49atqqhxjyaf3", newAddr)
}

func Test_BuildConvertByOperatorsUnlockingScript(t *testing.T) {
	c, err := NewCcCovenant(redeemScriptWithoutConstructorArgs, operatorPks, monitorPks, 2000, &chaincfg.TestNet3Params)
	require.NoError(t, err)

	sigScript, err := c.BuildConvertByOperatorsUnlockingScript(
		[][]byte{
			HexToBytes("0x3044022008fd154a74fb144f282b4e1ea51e7a0740b2a793d27afe5b8ad3353448775acc022014cc728b00091c5ba75370fdc09e846fcf8d2b4ec1827b4bb98dedc0468be18741"),
			HexToBytes("0x30450221009cd14d49cbddcb7de5268c51685d42c8451d15fd56151671d5bea1266177c817022001fc372c8b7a29a923f8ee3f44443df5990ecc614c23a1e3b675fc0ac4870aa741"),
			HexToBytes("0x3045022100c702deb1c32df3a75571356b6b98d588fda16d6835a5a95402ac1d3c2bffdc4d0220325231de03b0bac3863fd02efe2da294212e389ce412e6e4356f0de142234d7041"),
			HexToBytes("0x30440220117535312284088e5872c723ddbc66530ffab5548f32228810f5bc53b76c53110220012bf6bf8b4bd4c9f5c5a83347af81aa297a0c597e6f99ee3e23abb96e5e86ab41"),
			HexToBytes("0x3044022072b855faac8e14860a7fcfbe421435934346be684a5ac855efbceeeaff0b2998022037c72565850d6f8974191327a5c33f87c944648f592e7b3e1291f3ba657b02d941"),
			HexToBytes("0x304402201609927a7a4fb610ce175daddad164e0d91987c74f2a66ce142e881a7bc0efe802200c9e0870a182550690c50d8cb70d3119b2dc1dbf932eb0ebbe6d37d773963cab41"),
			HexToBytes("0x3045022100da71035a60844b1cfc94e5c5893b5c05fa485dd8f2aa0c3ddf4adf6bdc79a5a502200b6e5c6ce8cbe8dac0ec967a73eda15370d2475890d858cd400781441363d5d541"),
		},
		operatorPks2,
		monitorPks,
	)
	require.NoError(t, err)
	fmt.Println("0x" + hex.EncodeToString(sigScript))
	require.Equal(t, "0x1457a158339cd184037a5b27d3033cb721713f27c31427c4ca4766591e6bb8cd71b83143946c53eaf9a32103883b732620e238e74041e5fab900234dc80f7a48d56a1bf41e8523c4661f82432103bfe6f6ecb5e10662481aeb6f6408db2a32b9b86a660acbb8c5374dbb976e53ca210386f450b1bee3b220c6a9a25515f15f05bd80a23e5f707873dfbac52db933b27d2102fbbc3870035c2ee30cfa3102aff15e58bdfc0d0f95998cd7e1eeebc09cdb6873210271ea0c254ebbb7ed78668ba8653abe222b9f7177642d3a75709d95912a8d9d2c210394ec324d59305638ead14b4f4da9a50c793f1e328e180f92c04a4990bb573af121038fd3d33474e1bd453614f85d8fb1edecae92255867d18a9048669119fb710af52103fdec69ef6ec640264045229ca7cf0f170927b87fc8d2047844f8a766ead467e421035c0a0cb8987290ea0a7a926e8aa8978ac042b4c0be8553eb4422461ce1a17cd82102d86b49e3424e557beebf67bd06842cdb88e314c44887f3f265b7f81107dd6994483045022100da71035a60844b1cfc94e5c5893b5c05fa485dd8f2aa0c3ddf4adf6bdc79a5a502200b6e5c6ce8cbe8dac0ec967a73eda15370d2475890d858cd400781441363d5d54147304402201609927a7a4fb610ce175daddad164e0d91987c74f2a66ce142e881a7bc0efe802200c9e0870a182550690c50d8cb70d3119b2dc1dbf932eb0ebbe6d37d773963cab41473044022072b855faac8e14860a7fcfbe421435934346be684a5ac855efbceeeaff0b2998022037c72565850d6f8974191327a5c33f87c944648f592e7b3e1291f3ba657b02d9414730440220117535312284088e5872c723ddbc66530ffab5548f32228810f5bc53b76c53110220012bf6bf8b4bd4c9f5c5a83347af81aa297a0c597e6f99ee3e23abb96e5e86ab41483045022100c702deb1c32df3a75571356b6b98d588fda16d6835a5a95402ac1d3c2bffdc4d0220325231de03b0bac3863fd02efe2da294212e389ce412e6e4356f0de142234d70414830450221009cd14d49cbddcb7de5268c51685d42c8451d15fd56151671d5bea1266177c817022001fc372c8b7a29a923f8ee3f44443df5990ecc614c23a1e3b675fc0ac4870aa741473044022008fd154a74fb144f282b4e1ea51e7a0740b2a793d27afe5b8ad3353448775acc022014cc728b00091c5ba75370fdc09e846fcf8d2b4ec1827b4bb98dedc0468be18741004cf914553fac4027a7a3c4e8a3eaea75aab173d3c8144b1427c4ca4766591e6bb8cd71b83143946c53eaf9a35279009c635a795c797e5d797e5e797e5f797e60797e0111797e0112797e0113797e0114797ea952798800717c567a577a587a597a5a7a575c7a5d7a5e7a5f7a607a01117a01127a01137a01147a01157a5aafc3519dc4519d00cc00c602d007949d5379879154797b87919b63011453797e01147e52797ec1012a7f777e02a91478a97e01877e00cd78886d686d7551677b519d547956797e57797ea98800727c52557a567a577a53afc0009d00cc00c69d024065b27501147b7ec101157f777e02a9147ca97e01877e00cd877768",
		"0x"+hex.EncodeToString(sigScript))
}

func Test_ConvertByOperatorsTx(t *testing.T) {
	c, err := NewCcCovenant(redeemScriptWithoutConstructorArgs, operatorPks, monitorPks, 2000, &chaincfg.TestNet3Params)
	require.NoError(t, err)

	txid := HexToBytes("f7aed2149ab8eeb18c315273865370008ccaa78924736dbb2a407709c97e2a85")
	vout := uint32(0)
	inAmt := int64(10000)
	//outAmt := int64(8000) // gasFee = 2000

	unsignedTx, sigHash, err := c.GetConvertByOperatorsTxSigHash(txid, vout, inAmt, operatorPks2, monitorPks)
	require.NoError(t, err)

	var sigs [][]byte
	hashType := txscript.SigHashAll | txscript.SigHashForkID
	for i := 0; i < 7; i++ {
		sig, err := SignCcCovenantTxSigHashECDSA(operatorWIFs[i], sigHash, hashType)
		require.NoError(t, err, i)
		sigs = append(sigs, sig)
	}

	rawTx, err := c.FinishConvertByOperatorsTx(unsignedTx, sigs, operatorPks2, monitorPks)
	require.NoError(t, err)
	println("rawTx:", rawTx)

	//expectedTxHex := "0200000001852a7ec90977402abb6d732489a7ca8c007053867352318cb1eeb89a14d2aef700000000fd74041457a158339cd184037a5b27d3033cb721713f27c31427c4ca4766591e6bb8cd71b83143946c53eaf9a32103883b732620e238e74041e5fab900234dc80f7a48d56a1bf41e8523c4661f82432103bfe6f6ecb5e10662481aeb6f6408db2a32b9b86a660acbb8c5374dbb976e53ca210386f450b1bee3b220c6a9a25515f15f05bd80a23e5f707873dfbac52db933b27d2102fbbc3870035c2ee30cfa3102aff15e58bdfc0d0f95998cd7e1eeebc09cdb6873210271ea0c254ebbb7ed78668ba8653abe222b9f7177642d3a75709d95912a8d9d2c210394ec324d59305638ead14b4f4da9a50c793f1e328e180f92c04a4990bb573af121038fd3d33474e1bd453614f85d8fb1edecae92255867d18a9048669119fb710af52103fdec69ef6ec640264045229ca7cf0f170927b87fc8d2047844f8a766ead467e421035c0a0cb8987290ea0a7a926e8aa8978ac042b4c0be8553eb4422461ce1a17cd82102d86b49e3424e557beebf67bd06842cdb88e314c44887f3f265b7f81107dd699447304402202153a9426e87753de35ece28543919eea82bb46532aae32d2b13641a826951d2022067903db92947ad2e784f866f14a027da7202ece8f3145a2c3387e836e25b63ea41483045022100904fbecb3e35780adea3645bf2f2a37cb61b43fc100bf447ce16366e0e9009150220487d9f36218cbff313e3d2e4a9ebd20a471f2494e4e402571d6cade2506ad01341473044022043bf8c4b5675c16e957339e167f9c231ae60013445e6a4e82f1c9640d5c7291c02207fd7b6b784642e0500865b1b68cd866ee1cfb9fa548729343b3ddf2c4ec327c74147304402203441f38bf20cea13d1ee7011cf3156667d46161c9751eb54bd928a7be5c5f715022075e24d9da97d66a1909a5c6559ad4b51f21548d4db2e0fef1ce9b312639d179e4147304402200e5a734c4ad82a274a95d1aaa5bb78e526b52c566a44a702018d08f7766265df0220690b47af5f3cf1408fe7e393e2308ef769c37e4d5b470f5359f775e106574cf641473044022047ffba19d10f5924edf418a5f1c538a5d7677e5ad896d0c7546da1e80dec697602204ad3c60914704ce05bd38b1b3f3dcad9ff5ffa5143e49956d9caac41bf25b1e941483045022100a5ee673171e3005b92bb5394efc41fbf5b685b84ac1b2f5ad1f7cfd8af63208d02201db58c9702f8e9e51887d0d09b5c14f4cd0c40dd9be9b4d39a31803db02da5b541004cf914553fac4027a7a3c4e8a3eaea75aab173d3c8144b1427c4ca4766591e6bb8cd71b83143946c53eaf9a35279009c635a795c797e5d797e5e797e5f797e60797e0111797e0112797e0113797e0114797ea952798800717c567a577a587a597a5a7a575c7a5d7a5e7a5f7a607a01117a01127a01137a01147a01157a5aafc3519dc4519d00cc00c602d007949d5379879154797b87919b63011453797e01147e52797ec1012a7f777e02a91478a97e01877e00cd78886d686d7551677b519d547956797e57797ea98800727c52557a567a577a53afc0009d00cc00c69d024065b27501147b7ec101157f777e02a9147ca97e01877e00cd877768ffffffff01401f00000000000017a914ae2c75b69475fe48a15f1a838b5238f4cc54bd588700000000"
	//require.Equal(t, expectedTxHex, rawTx)
}

func Test_ConvertByMonitors(t *testing.T) {
	c, err := NewCcCovenant(redeemScriptWithoutConstructorArgs, operatorPks, monitorPks, 2000, &chaincfg.TestNet3Params)
	require.NoError(t, err)

	txid := HexToBytes("d025ad9428530ef952822d769fc1078dca2e0b51dd6998faedd6ae83c3b4cc76")
	vout := uint32(0)
	inAmt := int64(10000)

	unsignedTx, sigHash, err := c.GetConvertByMonitorsTxSigHash(txid, vout, inAmt, operatorPks2)
	require.NoError(t, err)

	var sigs [][]byte
	hashType := txscript.SigHashSingle | txscript.SigHashAnyOneCanPay | txscript.SigHashForkID
	for i := 0; i < 2; i++ {
		sig, err := SignCcCovenantTxSigHashECDSA(monitorWIFs[i], sigHash, hashType)
		require.NoError(t, err, i)
		sigs = append(sigs, sig)
	}

	signedTx, err := c.AddConvertByMonitorsTxMonitorSigs(unsignedTx, sigs, operatorPks2)
	require.NoError(t, err)
	//println("signedTx:", signedTx)

	txid2 := HexToBytes("03a6a2c9ea5f2faf82a8c2f9035a44e6de2e51154fe08f17c9d3978c2dce9c64")
	vout2 := uint32(0)
	inAmt2 := int64(10001)
	minerFee := int64(3001)
	alice := "bchtest:qp5vev8yjxzyf0wmqhwvkvfa3jtear397gwsfxg7sa"
	txWithGasFee, err := c.AddConvertByMonitorsTxMinerFee(signedTx, txid2, vout2, inAmt2, minerFee, alice)
	require.NoError(t, err)
	println("txWithGasFee:", txWithGasFee)

	sigHash2, err := c.GetConvertByMonitorsTxSigHash2(txWithGasFee, inAmt2, alice)
	require.NoError(t, err)

	aliceWIF := "KxKVXkyiUGH4m8nL6cgovXdxmhG2VSsukVnBWjJPSPbwVEkSfXfu"
	alicePK := "02d27c31afad03f4a300868165b5aff09babe6bb3fdc14048ecb3e1de1457c4b3e"
	hashType2 := txscript.SigHashAll | txscript.SigHashForkID
	sig, err := SignCcCovenantTxSigHashECDSA(aliceWIF, sigHash2, hashType2)
	require.NoError(t, err)
	txWithGasFeeSig, err := c.AddConvertByMonitorsTxMinerFeeSig(txWithGasFee, sig, HexToBytes(alicePK))
	require.NoError(t, err)
	println("txWithGasFeeSig:", txWithGasFeeSig)

	rawTx := msgTxToHex(txWithGasFeeSig)
	println(rawTx)

	//expectedTxHex := "0200000001852a7ec90977402abb6d732489a7ca8c007053867352318cb1eeb89a14d2aef700000000fd74041457a158339cd184037a5b27d3033cb721713f27c31427c4ca4766591e6bb8cd71b83143946c53eaf9a32103883b732620e238e74041e5fab900234dc80f7a48d56a1bf41e8523c4661f82432103bfe6f6ecb5e10662481aeb6f6408db2a32b9b86a660acbb8c5374dbb976e53ca210386f450b1bee3b220c6a9a25515f15f05bd80a23e5f707873dfbac52db933b27d2102fbbc3870035c2ee30cfa3102aff15e58bdfc0d0f95998cd7e1eeebc09cdb6873210271ea0c254ebbb7ed78668ba8653abe222b9f7177642d3a75709d95912a8d9d2c210394ec324d59305638ead14b4f4da9a50c793f1e328e180f92c04a4990bb573af121038fd3d33474e1bd453614f85d8fb1edecae92255867d18a9048669119fb710af52103fdec69ef6ec640264045229ca7cf0f170927b87fc8d2047844f8a766ead467e421035c0a0cb8987290ea0a7a926e8aa8978ac042b4c0be8553eb4422461ce1a17cd82102d86b49e3424e557beebf67bd06842cdb88e314c44887f3f265b7f81107dd699447304402202153a9426e87753de35ece28543919eea82bb46532aae32d2b13641a826951d2022067903db92947ad2e784f866f14a027da7202ece8f3145a2c3387e836e25b63ea41483045022100904fbecb3e35780adea3645bf2f2a37cb61b43fc100bf447ce16366e0e9009150220487d9f36218cbff313e3d2e4a9ebd20a471f2494e4e402571d6cade2506ad01341473044022043bf8c4b5675c16e957339e167f9c231ae60013445e6a4e82f1c9640d5c7291c02207fd7b6b784642e0500865b1b68cd866ee1cfb9fa548729343b3ddf2c4ec327c74147304402203441f38bf20cea13d1ee7011cf3156667d46161c9751eb54bd928a7be5c5f715022075e24d9da97d66a1909a5c6559ad4b51f21548d4db2e0fef1ce9b312639d179e4147304402200e5a734c4ad82a274a95d1aaa5bb78e526b52c566a44a702018d08f7766265df0220690b47af5f3cf1408fe7e393e2308ef769c37e4d5b470f5359f775e106574cf641473044022047ffba19d10f5924edf418a5f1c538a5d7677e5ad896d0c7546da1e80dec697602204ad3c60914704ce05bd38b1b3f3dcad9ff5ffa5143e49956d9caac41bf25b1e941483045022100a5ee673171e3005b92bb5394efc41fbf5b685b84ac1b2f5ad1f7cfd8af63208d02201db58c9702f8e9e51887d0d09b5c14f4cd0c40dd9be9b4d39a31803db02da5b541004cf914553fac4027a7a3c4e8a3eaea75aab173d3c8144b1427c4ca4766591e6bb8cd71b83143946c53eaf9a35279009c635a795c797e5d797e5e797e5f797e60797e0111797e0112797e0113797e0114797ea952798800717c567a577a587a597a5a7a575c7a5d7a5e7a5f7a607a01117a01127a01137a01147a01157a5aafc3519dc4519d00cc00c602d007949d5379879154797b87919b63011453797e01147e52797ec1012a7f777e02a91478a97e01877e00cd78886d686d7551677b519d547956797e57797ea98800727c52557a567a577a53afc0009d00cc00c69d024065b27501147b7ec101157f777e02a9147ca97e01877e00cd877768ffffffff01401f00000000000017a914ae2c75b69475fe48a15f1a838b5238f4cc54bd588700000000"
	//require.Equal(t, expectedTxHex, rawTx)
}

func HexToBytes(s string) []byte {
	return gethcmn.FromHex(s)
}
